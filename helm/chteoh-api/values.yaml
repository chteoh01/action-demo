# Default values for chteoh-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

k8s:
  namespace: "default"
app:
  name: "chteoh-api"
service:
  port: "5000"
metrics:
  port: "5001"
cpu:
  target: "100m"
  #This is 85% of the cpu limit set.
memory:
  target: "413Mi"
  #This is 85% of the memory limit set.

image:
  repository: sidlabacr03.azurecr.io/chteoh-action
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  name: acr-auth

# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
  # Specifies whether a service account should be created
  # create: true
  # Annotations to add to the service account
  # annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # name: ""

# podAnnotations: {}

# podSecurityContext: {}
  # fsGroup: 2000

# securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 130m
    memory: 486Mi
  requests:
    cpu: 100m
    memory: 270Mi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
